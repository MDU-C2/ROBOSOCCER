/* rasp_communicator.h
 *==============================================================================
 * Author: Aaiza A. Khan and Shruthi P. Kunnon
 * Creation date: 2024-11-11
 * Last modified: 2024-11-11 by Aaiza A. Khan
 * Description: Communicator between STM32 and Raspberry pi.
 * License: See LICENSE file for license details.
 *==============================================================================
 */

#ifndef SRC_USER_CODE_RASPBERRYPI_COMMUNICATOR_RASP_COMMUNICATOR_H_
#define SRC_USER_CODE_RASPBERRYPI_COMMUNICATOR_RASP_COMMUNICATOR_H_

/* Project .h files */
#include "../stm32h7xx_hal.h"
#include <cstdint>
namespace stm32_code
{
namespace raspberrypi_communicator
{

class RaspCommunicator {
public:
	RaspCommunicator(UART_HandleTypeDef* huart5);
    void TransmitData();
    void ReceiveData();
    UartRxCallback();
    uint8_t* GetRxBuffer() { return rx_buff; }

private:
    UART_HandleTypeDef* huart5_;
    uint8_t tx_buff[10]; // Buffer for transmitting data
    uint8_t rx_buff[10]; // Buffer for receiving data
};

} /* namespace raspberrypi_communicator */
} /* namespace stm32_code */

#endif /* SRC_USER_CODE_RASPBERRYPI_COMMUNICATOR_RASP_COMMUNICATOR_H_ */
