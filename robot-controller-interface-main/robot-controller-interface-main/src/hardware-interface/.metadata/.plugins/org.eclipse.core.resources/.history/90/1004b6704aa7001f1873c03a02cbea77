/* rasp_communicator.cc
 *==============================================================================
 * Author: Aaiza A. Khan and Shruthi P. Kunnon
 * Creation date: 2024-11-11
 * Last modified: 2024-11-11 by Aaiza A. Khan
 * Description: Communicator between STM32 and Raspberry pi.
 * License: See LICENSE file for license details.
 *==============================================================================
 */

/* Related .h files */
#include "rasp_communicator.h"

/* C++ standard library headers */
#include <string.h>
#include <stdio.h>

/* Project .h files */
#include "../stm32h7xx_hal.h"

// Global buffers for transmission and reception
uint8_t tx_buff[] = {65, 66, 67, 68, 69, 70, 71, 72, 73, 74}; // ABCDEFGHIJ in ASCII code
uint8_t rx_buff[10]; // Buffer to store received data

// Declare UART handlers as extern (defined in main.c)
extern UART_HandleTypeDef huart3;
extern UART_HandleTypeDef huart5;

namespace stm32_code
{
namespace raspberrypi_communicator
{
void TransmitToRaspberryPi(UART_HandleTypeDef &huart)
{
	HAL_UART_Transmit_DMA(&huart, tx_buff, sizeof(tx_buff));
	HAL_Delay(1000);
}
void ReceiveFromRaspberryPi(UART_HandleTypeDef &huart, uint8_t *buffer, uint16_t bufferSize)
{
    HAL_UART_Receive_DMA(&huart5, rx_buff, 10);

    // Forward the received data to UART3 (for debugging on minicom or serial terminal)
    HAL_UART_Transmit(&huart3, rx_buff, sizeof(rx_buff), HAL_MAX_DELAY);
    HAL_Delay(1000);
}

} /* namespace raspberrypi_communicator */
} /* namespace stm32_code */

extern "C" void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
    if (huart->Instance == UART5) // Check if the callback is for UART5
    {

        // Re-enable DMA for continuous reception
        HAL_UART_Receive_DMA(&huart5, rx_buff, sizeof(rx_buff));
    }
}
