/* rasp_communicator.cc
 *==============================================================================
 * Author: Aaiza A. Khan and Shruthi P. Kunnon
 * Creation date: 2024-11-11
 * Last modified: 2024-11-11 by Aaiza A. Khan
 * Description: Communicator between STM32 and Raspberry pi.
 * License: See LICENSE file for license details.
 *==============================================================================
 */

/* Related .h files */
#include "raspberrypi-communicator/rasp_communicator.h"

/* C++ standard library headers */
#include <string.h>
#include <stdio.h>

/* Project .h files */
#include "../stm32h7xx_hal.h"
// Declare buffers as global (or move them to private members)
uint8_t tx_buff[] = {65, 66, 67, 68, 69, 70, 71, 72, 73, 74}; // ABCDEFGHIJ in ASCII
uint8_t rx_buff[10]; // Buffer for receiving data

namespace stm32_code
{
namespace raspberrypi_communicator
{
static RaspCommunicator* instance = nullptr;
RaspCommunicator::RaspCommunicator(UART_HandleTypeDef* huart5) : huart5_(huart5) {
    // No need to initialize tx_buff here, it's already declared in the header
    //tx_buff[0] = 65; tx_buff[1] = 66; tx_buff[2] = 67; tx_buff[3] = 68;
	instance = this;
	//tx_buff[4] = 69; tx_buff[5] = 70; tx_buff[6] = 71; tx_buff[7] = 72;
   // tx_buff[8] = 73; tx_buff[9] = 74;
}

void RaspCommunicator::TransmitData() {
    HAL_UART_Transmit_DMA(huart5_, tx_buff, sizeof(tx_buff));  // Using DMA for transmission
}

void RaspCommunicator::ReceiveData() {
    HAL_UART_Receive_DMA(huart5_, rx_buff, sizeof(rx_buff));  // Using DMA for reception

}

/*void RaspCommunicator::UartRxCallback() {
    // Callback function for UART reception completion
    HAL_UART_Receive_DMA(huart5_, rx_buff, sizeof(rx_buff));  // Re-initiate DMA reception
}*/

// Interrupt callback for UART receive complete
/*void RaspCommunicator::HAL_UART_RxCpltCallback(UART_HandleTypeDef* huart)
{
    if (huart->Instance == UART5) // Check if the callback is for UART5
    {
        // Re-enable UART receive interrupt for continuous reception
        HAL_UART_Receive_DMA(&huart5_, rx_buff, 10);
    }
}
*/
void HAL_UART_RxCpltCallback(UART_HandleTypeDef* huart) {
    if (huart->Instance == UART5) {  // Check if callback is for UART5
        if (instance != nullptr) {
            instance->HAL_UART_RxCpltCallback(huart);  // Call the non-static member function
        }
    }
}
} /* namespace raspberrypi_communicator */
} /* namespace stm32_code */

